use FlexiBook.ump;

class Appointment{
  sm{
    Booked{
      
      updateAppointment(Customer c, TimeSlot TS, boolean toAdd, Service service) [upToOneDayDifference() & timeSlotAvailable()] /{
        doUpdateAppointment(c, TS, toAdd, service);
      }->Booked;
      
      cancelAppointment(Customer c) [upToOneDayDifference()]/{
        doCancelAppointment(c);
      }->Final;
      
      startAppointment() [isWithinAppTimeSlot()]/{
        doStartAppointment();
    }->InProgress;
      
    }
    
    InProgress{
      updateAppointment(Customer c,TimeSlot TS, boolean toAdd, Service service) [sameStartTime()]/{
        doUpdateAppointment(c, TS, toAdd, service);
      }-> InProgress;
      
      endAppointment()[isDone() || noShow()]/{
        doEndAppointment();
    }->Final;
    }
    
  }
  
  private void doCancelAppointment(Customer c){
  
  }
  
  private void doUpdateAppointment(Customer c, TimeSlot TS, boolean toAdd, Service service){
  
  }
  
  private void doStartAppointment(){
  }
  
  private void doEndAppointment(){
  }
  
  private boolean isDone(){
  return true;
  }
  
  private boolean noShow(){
  return true;
  }
  
  private boolean isWithinAppTimeSlot(){
  return true;
  }
  
  private boolean upToOneDayDifference(){
  return true;
  }
  
  private boolean sameStartTime(){
  return true;
  }
  
  private boolean timeSlotAvailable(){
  return true;
  }
   
  
}
